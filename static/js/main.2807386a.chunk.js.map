{"version":3,"sources":["components/inputNumber/index.js","components/playPauseButton/index.js","components/resetButton/index.js","ColorModeSwitcher.js","themes/defaultTheme.js","App.js","index.js"],"names":["InputNumber","props","useNumberInput","step","value","min","max","isDisabled","disabled","getInputProps","getIncrementButtonProps","getDecrementButtonProps","inc","dec","input","isReadOnly","size","as","id","title","onClick","handleClick","type","width","textAlign","PlayPauseButton","icon","play","faPause","faPlay","ResetButton","faRedo","ColorModeSwitcher","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","fontSize","aria-label","variant","color","marginLeft","theme","extendTheme","fonts","heading","body","applicationRunStates","applicationPeriodStates","App","createState","appRunState","appPeriodState","sessionTime","sessionRemTime","breakTime","breakRemTime","getVal","remTime","this","Math","floor","sec","String","useState","state","setState","myApp","useRef","useEffect","current","clearInterval","setInterval","prevState","document","getElementById","handleIncDecClick","num","minH","p","justifySelf","spacing","justify","defValue","boxShadow","audioEl","pause","currentTime","preload","src","ReactDOM","render"],"mappings":"oSAiDeA,EA/CK,SAAAC,GAClB,MAA4EC,YAAe,CACzFC,KAAM,EACNC,MAAOH,EAAMG,MACbC,IAAKJ,EAAMI,IACXC,IAAKL,EAAMK,IACXC,WAAYN,EAAMO,WALZC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,wBAAyBC,EAAhD,EAAgDA,wBAQ1CC,EAAMF,IACNG,EAAMF,IACNG,EAAQL,EAAc,CAAEM,YAAY,IAE1C,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,KAAK,KAAKC,GAAG,KAAKC,GAAIjB,EAAMiB,GAArC,SACGjB,EAAMkB,QAET,eAAC,IAAD,WACE,cAAC,IAAD,2BACMP,GADN,IAEEQ,QAAS,kBAAMnB,EAAMoB,YAAYpB,EAAMqB,KAAM,IAE7CJ,GAAIjB,EAAMqB,KAAO,aAJnB,gBAQA,cAAC,IAAD,2BACMR,GADN,IAEEV,MAAOH,EAAMG,MACbc,GAAIjB,EAAMqB,KAAO,UACjBC,MAAM,OACNC,UAAU,YAEZ,cAAC,IAAD,2BACMX,GADN,IAEEO,QAAS,kBAAMnB,EAAMoB,YAAYpB,EAAMqB,MAAO,IAE9CJ,GAAIjB,EAAMqB,KAAO,aAJnB,uB,yBCvBOG,EATS,SAAAxB,GACtB,OACE,cAAC,IAAD,CACEiB,GAAIjB,EAAMiB,GACVQ,KAAM,cAAC,IAAD,CAAiBN,QAASnB,EAAMoB,YAAaK,KAAMzB,EAAM0B,KAAOC,IAAUC,SCMvEC,EAVK,SAAA7B,GAClB,OACE,cAAC,IAAD,CACEiB,GAAIjB,EAAMiB,GACVE,QAASnB,EAAMoB,YACfK,KAAM,cAAC,IAAD,CAAiBA,KAAMK,S,gBCLtBC,EAAoB,SAAA/B,GAC/B,IAAQgC,EAAoBC,cAApBD,gBACFE,EAAOC,YAAkB,OAAQ,SACjCC,EAAaD,YAAkBE,IAAQC,KAE7C,OACE,cAAC,IAAD,aACEvB,KAAK,KACLwB,SAAS,KACTC,aAAA,oBAAyBN,EAAzB,SACAO,QAAQ,QACRC,MAAM,UACNC,WAAW,IACXxB,QAASa,EACTP,KAAM,cAACW,EAAD,KACFpC,K,SCVK4C,EAPDC,YAAY,CACxBC,MAAO,CACLC,QAAS,YACTC,KAAM,gBCMGC,EAAkC,UAAlCA,EAAqD,SAC5DC,EAAqC,UAArCA,EAAuD,QA8K9CC,MA5Kf,WACE,SAASC,IACP,MAAO,CACLC,YAAaJ,EACbK,eAAgBJ,EAChBK,YAAa,KACbC,eAAgB,KAChBC,UAAW,IACXC,aAAc,IACdC,OAAQ,WACN,IAAMC,EACJC,KAAKP,iBAAmBJ,EACpBW,KAAKL,eACLK,KAAKH,aACX,EAAiB,CAACI,KAAKC,MAAMH,EAAU,IAAKA,EAAU,IAAjDxD,EAAL,KAAU4D,EAAV,KAGA,MAAO,CAAE5D,IAFTA,EAAMA,EAAM,GAAK,IAAM6D,OAAO7D,GAAOA,EAEvB4D,IADdA,EAAMA,EAAM,GAAK,IAAMC,OAAOD,GAAOA,KAM3C,MAA0BE,mBAASd,KAAnC,mBAAOe,EAAP,KAAcC,EAAd,KAEMC,EAAQC,iBAAO,MACrBC,qBAAU,WACJJ,EAAMd,cAAgBJ,GACxB,OAAIoB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOG,UAASC,cAAcJ,EAAMG,SAExCH,EAAMG,QAAUE,aAAY,WAC1BN,GAAS,SAAAO,GACP,GAAIA,EAAUrB,iBAAmBJ,EAAiC,CAChE,IAAMU,EAAUe,EAAUnB,eAAiB,EAC3C,OAAII,GAAW,EACN,2BACFe,GADL,IAEEnB,eAAgBI,KAGFgB,SAASC,eAAe,QAChCnD,OACD,2BACFiD,GADL,IAEEnB,eAAgBmB,EAAUpB,YAC1BD,eAAgBJ,KAIpB,IAAMU,EAAUe,EAAUjB,aAAe,EACzC,OAAIE,GAAW,EACN,2BACFe,GADL,IAEEjB,aAAcE,KAGAgB,SAASC,eAAe,QAChCnD,OACD,2BACFiD,GADL,IAEEjB,aAAciB,EAAUlB,UACxBH,eAAgBJ,UAKvB,OAEJ,CAACiB,EAAMd,cAEV,IAiBMyB,EAAoB,SAACzD,EAAM0D,GAE7BX,EADW,YAAT/C,EACO,SAAAsD,GACP,OAAO,2BACFA,GADL,IAEEpB,YAAaoB,EAAUpB,YAAoB,GAANwB,EACrCvB,eAAgBmB,EAAUpB,YAAoB,GAANwB,KAInC,SAAAJ,GACP,OAAO,2BACFA,GADL,IAEElB,UAAWkB,EAAUlB,UAAkB,GAANsB,EACjCrB,aAAciB,EAAUlB,UAAkB,GAANsB,OAU5C,OAJAR,qBAAU,WACRH,EAAShB,OACR,IAGD,cAAC,IAAD,CAAgBR,MAAOA,EAAvB,SACE,cAAC,IAAD,CAAKrB,UAAU,SAASgB,SAAS,KAAjC,SACE,eAAC,IAAD,CAAMyC,KAAK,QAAQC,EAAG,EAAtB,UACE,cAAC,EAAD,CAAmBC,YAAY,aAC/B,eAAC,IAAD,CAAQC,QAAS,EAAjB,UACE,cAAC,IAAD,CAASnE,GAAG,KAAKD,KAAK,MAAtB,sCAGA,eAAC,IAAD,CAAQO,MAAO,IAAK8D,QAAQ,gBAA5B,UACE,cAAC,EAAD,CACE/D,KAAK,UACLlB,MAAOgE,EAAMZ,YAAc,GAC3BhD,SAAU4D,EAAMd,cAAgBJ,EAChCI,YAAac,EAAMd,YACnBjC,YAAa0D,EACb7D,GAAG,gBACHb,IAAK,EACLC,IAAK,GACLgF,SAAU,GACVnE,MAAM,mBAER,cAAC,EAAD,CACEG,KAAK,QACLlB,MAAOgE,EAAMV,UAAY,GACzBlD,SAAU4D,EAAMd,cAAgBJ,EAChC7B,YAAa0D,EACb7D,GAAG,cACHb,IAAK,EACLC,IAAK,GACLgF,SAAU,EACVnE,MAAM,oBAGV,cAAC,IAAD,CAASH,KAAK,KAAKC,GAAG,KAAKC,GAAG,cAA9B,SACGkD,EAAMb,iBAET,cAAC,IAAD,CAAKgC,UAAU,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMrE,GAAG,YAAT,SAAsBkD,EAAMR,SAASvD,IAAM,IAAM+D,EAAMR,SAASK,MAChE,eAAC,IAAD,WACE,cAAC,EAAD,CACE/C,GAAG,aACHS,KAAMyC,EAAMd,cAAgBJ,EAC5B7B,YArFI,WACpBgD,GAAS,SAAAO,GACP,OAAIA,EAAUtB,cAAgBJ,EACrB,2BAAK0B,GAAZ,IAAuBtB,YAAaJ,IAE7B,2BAAK0B,GAAZ,IAAuBtB,YAAaJ,UAkF1B,cAAC,EAAD,CAAahC,GAAG,QAAQG,YA7Ef,WACvB,IAAMmE,EAAUX,SAASC,eAAe,QACxCU,EAAQC,QACRD,EAAQE,YAAc,EACtBrB,EAAShB,WA2EG,uBACEnC,GAAG,OACHyE,QAAQ,OACRC,IAAI,8HC1KtBC,IAASC,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,EAAD,OAEFjB,SAASC,eAAe,W","file":"static/js/main.2807386a.chunk.js","sourcesContent":["import { Heading, Button, Input, HStack, useNumberInput, VStack } from '@chakra-ui/react';\n\nconst InputNumber = props => {\n  const { getInputProps, getIncrementButtonProps, getDecrementButtonProps } = useNumberInput({\n    step: 1,\n    value: props.value,\n    min: props.min,\n    max: props.max,\n    isDisabled: props.disabled,\n  });\n\n  const inc = getIncrementButtonProps();\n  const dec = getDecrementButtonProps();\n  const input = getInputProps({ isReadOnly: true });\n\n  return (\n    <VStack>\n      <Heading size=\"lg\" as=\"h2\" id={props.id}>\n        {props.title}\n      </Heading>\n      <HStack>\n        <Button\n          {...inc}\n          onClick={() => props.handleClick(props.type, 1)}\n          // isDisabled={props.disabled}\n          id={props.type + '-increment'}\n        >\n          +\n        </Button>\n        <Input\n          {...input}\n          value={props.value}\n          id={props.type + '-length'}\n          width=\"60px\"\n          textAlign=\"center\"\n        />\n        <Button\n          {...dec}\n          onClick={() => props.handleClick(props.type, -1)}\n          // isDisabled={props.disabled}\n          id={props.type + '-decrement'}\n        >\n          -\n        </Button>\n      </HStack>\n    </VStack>\n  );\n};\n\nexport default InputNumber;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconButton } from '@chakra-ui/react';\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons';\n\nconst PlayPauseButton = props => {\n  return (\n    <IconButton\n      id={props.id}\n      icon={<FontAwesomeIcon onClick={props.handleClick} icon={props.play ? faPause : faPlay} />}\n    />\n  );\n};\n\nexport default PlayPauseButton;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconButton } from '@chakra-ui/react';\nimport { faRedo } from '@fortawesome/free-solid-svg-icons';\n\nconst ResetButton = props => {\n  return (\n    <IconButton\n      id={props.id}\n      onClick={props.handleClick}\n      icon={<FontAwesomeIcon icon={faRedo} />}\n    />\n  );\n};\n\nexport default ResetButton;\n","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import { extendTheme } from '@chakra-ui/react';\n\nconst theme = extendTheme({\n  fonts: {\n    heading: 'Xanh Mono',\n    body: 'Space Mono',\n  },\n});\n\nexport default theme;\n","import '@fontsource/xanh-mono/400.css';\nimport '@fontsource/space-mono/400.css';\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ChakraProvider, Box, Heading, Text, VStack, HStack, Grid } from '@chakra-ui/react';\nimport InputNumber from './components/inputNumber';\nimport PlayPauseButton from './components/playPauseButton';\nimport ResetButton from './components/resetButton';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport theme from './themes/defaultTheme';\n\nexport const applicationRunStates = { RUNNING: 'RUNNING', PAUSED: 'PAUSED' };\nconst applicationPeriodStates = { SESSION: 'Session', BREAK: 'Break' };\n\nfunction App() {\n  function createState() {\n    return {\n      appRunState: applicationRunStates.PAUSED,\n      appPeriodState: applicationPeriodStates.SESSION,\n      sessionTime: 25 * 60,\n      sessionRemTime: 25 * 60,\n      breakTime: 5 * 60,\n      breakRemTime: 5 * 60,\n      getVal: function () {\n        const remTime =\n          this.appPeriodState === applicationPeriodStates.SESSION\n            ? this.sessionRemTime\n            : this.breakRemTime;\n        let [min, sec] = [Math.floor(remTime / 60), remTime % 60];\n        min = min < 10 ? '0' + String(min) : min;\n        sec = sec < 10 ? '0' + String(sec) : sec;\n        return { min, sec };\n      },\n    };\n  }\n\n  const [state, setState] = useState(createState());\n\n  const myApp = useRef(null);\n  useEffect(() => {\n    if (state.appRunState === applicationRunStates.PAUSED) {\n      if (myApp?.current) clearInterval(myApp.current);\n    } else {\n      myApp.current = setInterval(() => {\n        setState(prevState => {\n          if (prevState.appPeriodState === applicationPeriodStates.SESSION) {\n            const remTime = prevState.sessionRemTime - 1;\n            if (remTime >= 0) {\n              return {\n                ...prevState,\n                sessionRemTime: remTime,\n              };\n            } else {\n              const audioEl = document.getElementById('beep');\n              audioEl.play();\n              return {\n                ...prevState,\n                sessionRemTime: prevState.sessionTime,\n                appPeriodState: applicationPeriodStates.BREAK,\n              };\n            }\n          } else {\n            const remTime = prevState.breakRemTime - 1;\n            if (remTime >= 0) {\n              return {\n                ...prevState,\n                breakRemTime: remTime,\n              };\n            } else {\n              const audioEl = document.getElementById('beep');\n              audioEl.play();\n              return {\n                ...prevState,\n                breakRemTime: prevState.breakTime,\n                appPeriodState: applicationPeriodStates.SESSION,\n              };\n            }\n          }\n        });\n      }, 1000);\n    }\n  }, [state.appRunState]);\n\n  const handlePPClick = () => {\n    setState(prevState => {\n      if (prevState.appRunState === applicationRunStates.RUNNING) {\n        return { ...prevState, appRunState: applicationRunStates.PAUSED };\n      } else {\n        return { ...prevState, appRunState: applicationRunStates.RUNNING };\n      }\n    });\n  };\n\n  const handleResetClick = () => {\n    const audioEl = document.getElementById('beep');\n    audioEl.pause();\n    audioEl.currentTime = 0;\n    setState(createState());\n  };\n\n  const handleIncDecClick = (type, num) => {\n    if (type === 'session') {\n      setState(prevState => {\n        return {\n          ...prevState,\n          sessionTime: prevState.sessionTime + num * 60,\n          sessionRemTime: prevState.sessionTime + num * 60,\n        };\n      });\n    } else {\n      setState(prevState => {\n        return {\n          ...prevState,\n          breakTime: prevState.breakTime + num * 60,\n          breakRemTime: prevState.breakTime + num * 60,\n        };\n      });\n    }\n  };\n\n  useEffect(() => {\n    setState(createState());\n  }, []);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\">\n        <Grid minH=\"100vh\" p={3}>\n          <ColorModeSwitcher justifySelf=\"flex-end\" />\n          <VStack spacing={8}>\n            <Heading as=\"h1\" size=\"2xl\">\n              Twenty Five + Five Clock\n            </Heading>\n            <HStack width={500} justify=\"space-between\">\n              <InputNumber\n                type=\"session\"\n                value={state.sessionTime / 60}\n                disabled={state.appRunState === applicationRunStates.RUNNING}\n                appRunState={state.appRunState}\n                handleClick={handleIncDecClick}\n                id=\"session-label\"\n                min={1}\n                max={60}\n                defValue={25}\n                title=\"Session Length\"\n              />\n              <InputNumber\n                type=\"break\"\n                value={state.breakTime / 60}\n                disabled={state.appRunState === applicationRunStates.RUNNING}\n                handleClick={handleIncDecClick}\n                id=\"break-label\"\n                min={1}\n                max={60}\n                defValue={5}\n                title=\"Break Length\"\n              />\n            </HStack>\n            <Heading size=\"md\" as=\"h5\" id=\"timer-label\">\n              {state.appPeriodState}\n            </Heading>\n            <Box boxShadow=\"lg\">\n              <VStack>\n                <Text id=\"time-left\">{state.getVal().min + ':' + state.getVal().sec}</Text>\n                <HStack>\n                  <PlayPauseButton\n                    id=\"start_stop\"\n                    play={state.appRunState === applicationRunStates.RUNNING}\n                    handleClick={handlePPClick}\n                  />\n                  <ResetButton id=\"reset\" handleClick={handleResetClick} />\n                </HStack>\n                <audio\n                  id=\"beep\"\n                  preload=\"auto\"\n                  src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n                />\n              </VStack>\n            </Box>\n          </VStack>\n        </Grid>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}